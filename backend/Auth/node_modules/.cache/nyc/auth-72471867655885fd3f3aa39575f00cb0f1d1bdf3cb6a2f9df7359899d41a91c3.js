function cov_23vjch8w7y(){var path="C:\\Users\\HP\\OneDrive\\Desktop\\Capstone-backend\\backend\\Auth\\routes\\auth.js";var hash="27dbfb8c976cd8391f0e62f76a68ac93b472f824";var global=new Function("return this")();var gcv="__coverage__";var coverageData={path:"C:\\Users\\HP\\OneDrive\\Desktop\\Capstone-backend\\backend\\Auth\\routes\\auth.js",statementMap:{"0":{start:{line:1,column:15},end:{line:1,column:42}},"1":{start:{line:3,column:15},end:{line:3,column:34}},"2":{start:{line:4,column:12},end:{line:4,column:35}},"3":{start:{line:5,column:15},end:{line:5,column:39}},"4":{start:{line:6,column:46},end:{line:6,column:69}},"5":{start:{line:26,column:0},end:{line:38,column:3}},"6":{start:{line:27,column:8},end:{line:36,column:9}},"7":{start:{line:28,column:27},end:{line:28,column:44}},"8":{start:{line:29,column:10},end:{line:33,column:11}},"9":{start:{line:30,column:12},end:{line:30,column:81}},"10":{start:{line:32,column:12},end:{line:32,column:43}},"11":{start:{line:35,column:10},end:{line:35,column:66}},"12":{start:{line:94,column:0},end:{line:121,column:3}},"13":{start:{line:97,column:20},end:{line:97,column:48}},"14":{start:{line:98,column:5},end:{line:98,column:69}},"15":{start:{line:98,column:15},end:{line:98,column:69}},"16":{start:{line:101,column:24},end:{line:101,column:67}},"17":{start:{line:102,column:5},end:{line:102,column:83}},"18":{start:{line:102,column:20},end:{line:102,column:83}},"19":{start:{line:105,column:18},end:{line:105,column:42}},"20":{start:{line:106,column:28},end:{line:106,column:70}},"21":{start:{line:110,column:19},end:{line:114,column:8}},"22":{start:{line:115,column:6},end:{line:120,column:7}},"23":{start:{line:116,column:28},end:{line:116,column:45}},"24":{start:{line:117,column:10},end:{line:117,column:71}},"25":{start:{line:119,column:10},end:{line:119,column:36}},"26":{start:{line:174,column:0},end:{line:197,column:3}},"27":{start:{line:176,column:20},end:{line:176,column:45}},"28":{start:{line:177,column:4},end:{line:177,column:68}},"29":{start:{line:177,column:14},end:{line:177,column:68}},"30":{start:{line:179,column:17},end:{line:179,column:60}},"31":{start:{line:180,column:4},end:{line:180,column:77}},"32":{start:{line:180,column:14},end:{line:180,column:77}},"33":{start:{line:182,column:22},end:{line:182,column:76}},"34":{start:{line:183,column:4},end:{line:183,column:83}},"35":{start:{line:183,column:19},end:{line:183,column:83}},"36":{start:{line:185,column:20},end:{line:189,column:7}},"37":{start:{line:190,column:5},end:{line:193,column:8}},"38":{start:{line:191,column:8},end:{line:191,column:26}},"39":{start:{line:191,column:16},end:{line:191,column:26}},"40":{start:{line:192,column:8},end:{line:192,column:26}},"41":{start:{line:199,column:0},end:{line:199,column:24}}},fnMap:{"0":{name:"(anonymous_0)",decl:{start:{line:26,column:16},end:{line:26,column:17}},loc:{start:{line:26,column:35},end:{line:38,column:1}},line:26},"1":{name:"(anonymous_1)",decl:{start:{line:94,column:24},end:{line:94,column:25}},loc:{start:{line:94,column:43},end:{line:121,column:1}},line:94},"2":{name:"(anonymous_2)",decl:{start:{line:174,column:22},end:{line:174,column:23}},loc:{start:{line:174,column:40},end:{line:197,column:1}},line:174},"3":{name:"(anonymous_3)",decl:{start:{line:190,column:49},end:{line:190,column:50}},loc:{start:{line:190,column:64},end:{line:193,column:6}},line:190}},branchMap:{"0":{loc:{start:{line:29,column:10},end:{line:33,column:11}},type:"if",locations:[{start:{line:29,column:10},end:{line:33,column:11}},{start:{line:29,column:10},end:{line:33,column:11}}],line:29},"1":{loc:{start:{line:98,column:5},end:{line:98,column:69}},type:"if",locations:[{start:{line:98,column:5},end:{line:98,column:69}},{start:{line:98,column:5},end:{line:98,column:69}}],line:98},"2":{loc:{start:{line:102,column:5},end:{line:102,column:83}},type:"if",locations:[{start:{line:102,column:5},end:{line:102,column:83}},{start:{line:102,column:5},end:{line:102,column:83}}],line:102},"3":{loc:{start:{line:177,column:4},end:{line:177,column:68}},type:"if",locations:[{start:{line:177,column:4},end:{line:177,column:68}},{start:{line:177,column:4},end:{line:177,column:68}}],line:177},"4":{loc:{start:{line:180,column:4},end:{line:180,column:77}},type:"if",locations:[{start:{line:180,column:4},end:{line:180,column:77}},{start:{line:180,column:4},end:{line:180,column:77}}],line:180},"5":{loc:{start:{line:183,column:4},end:{line:183,column:83}},type:"if",locations:[{start:{line:183,column:4},end:{line:183,column:83}},{start:{line:183,column:4},end:{line:183,column:83}}],line:183},"6":{loc:{start:{line:191,column:8},end:{line:191,column:26}},type:"if",locations:[{start:{line:191,column:8},end:{line:191,column:26}},{start:{line:191,column:8},end:{line:191,column:26}}],line:191}},s:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0},f:{"0":0,"1":0,"2":0,"3":0},b:{"0":[0,0],"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0]},_coverageSchema:"1a1c01bbd47fc00a2c39e90264f33305004495a9",hash:"27dbfb8c976cd8391f0e62f76a68ac93b472f824"};var coverage=global[gcv]||(global[gcv]={});if(!coverage[path]||coverage[path].hash!==hash){coverage[path]=coverageData;}var actualCoverage=coverage[path];{// @ts-ignore
cov_23vjch8w7y=function(){return actualCoverage;};}return actualCoverage;}cov_23vjch8w7y();const router=(cov_23vjch8w7y().s[0]++,require('express').Router());//const User = require('../models/User');
const bcrypt=(cov_23vjch8w7y().s[1]++,require('bcryptjs'));const jwt=(cov_23vjch8w7y().s[2]++,require('jsonwebtoken'));const verify=(cov_23vjch8w7y().s[3]++,require('./verifyRoute'));const{registerValidation,loginValidation}=(cov_23vjch8w7y().s[4]++,require('./validation'));// Getting All users
/** 
* @swagger
* /api/user:
*  get:
*    summary: Getting all Users
*    tags: [Users]
*    description: Returns all Users
*    responses:
*     200:
*       description: These are all the users available in the database
*       content:
*         application/json:
*           schema:
*             type: array
*/cov_23vjch8w7y().s[5]++;router.get('/',async(req,res)=>{cov_23vjch8w7y().f[0]++;cov_23vjch8w7y().s[6]++;try{const allUsers=(cov_23vjch8w7y().s[7]++,await User.find());cov_23vjch8w7y().s[8]++;if(!allUsers){cov_23vjch8w7y().b[0][0]++;cov_23vjch8w7y().s[9]++;res.status(500).json({message:"Server Error - Try again later."});}else{cov_23vjch8w7y().b[0][1]++;cov_23vjch8w7y().s[10]++;res.status(200).json(allUsers);}}catch(error){cov_23vjch8w7y().s[11]++;console.log("Error fetching all users:",error.message);}});// Registration of Users
/** 
* @swagger
* /api/user/register:
*  post:
*    summary: Registering a new user
*    tags: [Users]
*    description: Creates a new user
*    requestBody:
*      description: Provide User details
*      content:
*          application/json:
*            schema:
*              type: object
*              properties: 
*                name:
*                  type: string
*                email:
*                  type: string
*                password:
*                  type: string
*    responses:
*     201:
*       description: User Created Successfully
*       content:
*         application/json:
*           schema:
*             type: array
*     400:
*       description: Bad Request
*       content:
*         application/json:
*           schema:
*             type: array
*     500:
*       description: Internal Server Error
*       content:
*         application/json:
*           schema:
*             type: array
*     401:
*       description: Unauthorized
*       content:
*         application/json:
*           schema:
*             type: array
*     404:
*       description: Not Found
*       content:
*         application/json:
*           schema:
*             type: array
*/cov_23vjch8w7y().s[12]++;router.post('/register',async(req,res)=>{cov_23vjch8w7y().f[1]++;//  Data Validation
const{error}=(cov_23vjch8w7y().s[13]++,registerValidation(req.body));cov_23vjch8w7y().s[14]++;if(error){cov_23vjch8w7y().b[1][0]++;cov_23vjch8w7y().s[15]++;return res.status(400).send(error.details[0].message);}else{cov_23vjch8w7y().b[1][1]++;}// Checking if a user exists
const emailExist=(cov_23vjch8w7y().s[16]++,await User.findOne({email:req.body.email}));cov_23vjch8w7y().s[17]++;if(emailExist){cov_23vjch8w7y().b[2][0]++;cov_23vjch8w7y().s[18]++;return res.status(400).json({Message:'Email already exists'});}else{cov_23vjch8w7y().b[2][1]++;}//Hashing the passwords
const salt=(cov_23vjch8w7y().s[19]++,await bcrypt.genSalt(10));const hashedPassword=(cov_23vjch8w7y().s[20]++,await bcrypt.hash(req.body.password,salt));// Create a new user
const user=(cov_23vjch8w7y().s[21]++,new User({name:req.body.name,email:req.body.email,password:hashedPassword}));cov_23vjch8w7y().s[22]++;try{const savedUser=(cov_23vjch8w7y().s[23]++,await user.save());cov_23vjch8w7y().s[24]++;res.status(200).json({Message:"User Created Successfully"});}catch(err){cov_23vjch8w7y().s[25]++;res.status(400).send(err);}});// ----------------------------Login---------------------
/** 
* @swagger
* /api/user/login:
*  post:
*    summary: Log in of Users
*    tags: [Users]
*    description: Logs a new user
*    requestBody:
*      description: Provide Login details
*      content:
*          application/json:
*            schema:
*              type: object
*              properties: 
*                email:
*                  type: string
*                password:
*                  type: string
*    responses:
*     200:
*       description: User Login Successful
*       content:
*         application/json:
*           schema:
*             type: array
*     400:
*       description: Bad Request
*       content:
*         application/json:
*           schema:
*             type: array
*     500:
*       description: Internal Server Error
*       content:
*         application/json:
*           schema:
*             type: array
*     401:
*       description: Unauthorized
*       content:
*         application/json:
*           schema:
*             type: array
*     404:
*       description: Not Found
*       content:
*         application/json:
*           schema:
*             type: array
*/cov_23vjch8w7y().s[26]++;router.post('/login',async(req,res)=>{cov_23vjch8w7y().f[2]++;// Validating the user
const{error}=(cov_23vjch8w7y().s[27]++,loginValidation(req.body));cov_23vjch8w7y().s[28]++;if(error){cov_23vjch8w7y().b[3][0]++;cov_23vjch8w7y().s[29]++;return res.status(400).send(error.details[0].message);}else{cov_23vjch8w7y().b[3][1]++;}// checking if user exists
const user=(cov_23vjch8w7y().s[30]++,await User.findOne({email:req.body.email}));cov_23vjch8w7y().s[31]++;if(!user){cov_23vjch8w7y().b[4][0]++;cov_23vjch8w7y().s[32]++;return res.status(400).json({Message:'Email does not exist'});}else{cov_23vjch8w7y().b[4][1]++;}// Check password
const validPass=(cov_23vjch8w7y().s[33]++,await bcrypt.compare(req.body.password,user.password));cov_23vjch8w7y().s[34]++;if(!validPass){cov_23vjch8w7y().b[5][0]++;cov_23vjch8w7y().s[35]++;return res.status(400).json({Message:'Password is incorrect'});}else{cov_23vjch8w7y().b[5][1]++;}//Create and assign a token
const payload=(cov_23vjch8w7y().s[36]++,{user:{id:user.id}});cov_23vjch8w7y().s[37]++;jwt.sign(payload,process.env.TOKEN_SECRET,(err,token)=>{cov_23vjch8w7y().f[3]++;cov_23vjch8w7y().s[38]++;if(err){cov_23vjch8w7y().b[6][0]++;cov_23vjch8w7y().s[39]++;throw err;}else{cov_23vjch8w7y().b[6][1]++;}cov_23vjch8w7y().s[40]++;res.json({token});});// res.header('auth-token',token).send(token);
});cov_23vjch8w7y().s[41]++;module.exports=router;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,